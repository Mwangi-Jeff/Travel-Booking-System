import java.util.*;

public class TravelAgency {
    private Map<String, Flight> flights = new HashMap<>();
    private Map<String, Passenger> passengers = new HashMap<>();

    public void addFlight(Flight flight) {
        flights.put(flight.getId(), flight);
    }

    public void addPassenger(Passenger passenger) {
        passengers.put(passenger.getId(), passenger);
    }

    public Flight findFlight(String id) {
        return flights.get(id);
    }

    public Passenger findPassenger(String id) {
        return passengers.get(id);
    }

    public void bookFlight(String flightId, String passengerId) {
        Flight flight = findFlight(flightId);
        Passenger passenger = findPassenger(passengerId);

        if (flight != null && passenger != null) {
            passenger.bookFlight(flight);
            flight.addPassenger(passenger);
        }
    }

    public void cancelBooking(String flightId, String passengerId) {
        Flight flight = findFlight(flightId);
        Passenger passenger = findPassenger(passengerId);

        if (flight != null && passenger != null) {
            passenger.cancelFlight(flight);
            flight.removePassenger(passenger);
        }
    }
}

class Flight {
    private String id;
    private List<Passenger> passengers = new ArrayList<>();

    public void addPassenger(Passenger passenger) {
        passengers.add(passenger);
    }

    public void removePassenger(Passenger passenger) {
        passengers.remove(passenger);
    }

    // constructor, getters and setters omitted for brevity
}

class Passenger {
    private String id;
    private List<Flight> bookedFlights = new ArrayList<>();

    public void bookFlight(Flight flight) {
        bookedFlights.add(flight);
    }

    public void cancelFlight(Flight flight) {
        bookedFlights.remove(flight);
    }

    // constructor, getters and setters omitted for brevity
}
public static void main(String[] args) {
    TravelAgency travelAgency = new TravelAgency();

    // Create flights
    Flight flight1 = new Flight("1");
    Flight flight2 = new Flight("2");
    travelAgency.addFlight(flight1);
    travelAgency.addFlight(flight2);

    // Create passengers
    Passenger passenger1 = new Passenger("1");
    Passenger passenger2 = new Passenger("2");
    travelAgency.addPassenger(passenger1);
    travelAgency.addPassenger(passenger2);

    // Book flights
    travelAgency.bookFlight("1", "1"); // Passenger 1 books Flight 1
    travelAgency.bookFlight("2", "2"); // Passenger 2 books Flight 2

    // Cancel bookings
    travelAgency.cancelBooking("1", "1"); // Passenger 1 cancels Flight 1
    travelAgency.cancelBooking("2", "2"); // Passenger 2 cancels Flight 2
}
